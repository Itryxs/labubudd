name: Build Labubu from ZIP and produce installer
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find ZIP file
        id: findzip
        run: |
          if (Test-Path -Path ./game_files.zip) {
            Write-Host "Found game_files.zip at repository root."
            Write-Output "./game_files.zip" > zippath.txt
          } else {
            $z = Get-ChildItem -Path . -Filter *.zip -Recurse | Select-Object -First 1
            if ($null -eq $z) { Write-Error "No ZIP file found in repository root or subfolders."; exit 1 }
            Write-Host "Found ZIP: $($z.FullName)"
            Write-Output $z.FullName > zippath.txt
          }
      - name: Set ZIP path output
        run: echo "ZIP_PATH=$(Get-Content zippath.txt)" >> $GITHUB_OUTPUT

      - name: Extract game ZIP (to ./game)
        run: |
          $zip = (Get-Content zippath.txt).Trim()
          if (Test-Path -Path ./game) { Remove-Item -Recurse -Force ./game }
          Expand-Archive -Path $zip -DestinationPath ./game -Force
        shell: pwsh

      - name: Show extracted files
        run: dir ./game
        shell: pwsh

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Ensure minimal Electron project if missing
        shell: pwsh
        run: |
          if (-not (Test-Path -Path ./game/package.json)) {
            Write-Host "No package.json found — creating minimal Electron project in ./game ..."
            if (-not (Test-Path -Path ./game)) { New-Item -ItemType Directory -Path ./game | Out-Null }
            # package.json
            $pkg = @'
{
  "name": "labubu-openworld",
  "productName": "Labubu OpenWorld",
  "version": "1.0.0",
  "main": "main.js",
  "scripts": {
    "start": "electron .",
    "dist": "electron-builder --win --x64"
  },
  "build": {
    "appId": "cz.labubu.openworld",
    "win": {
      "target": [ "nsis" ]
    },
    "files": [ "**/*" ]
  },
  "devDependencies": {
    "electron": "^26.0.0",
    "electron-builder": "^24.6.0"
  }
}
'@
            $pkg | Out-File -FilePath ./game/package.json -Encoding utf8 -Force

            # main.js
            $main = @'
const { app, BrowserWindow } = require("electron");
const path = require("path");
function createWindow() {
  const win = new BrowserWindow({ width: 1000, height: 700, webPreferences: { contextIsolation: true } });
  win.loadFile(path.join(__dirname, "index.html"));
}
app.whenReady().then(createWindow);
app.on("window-all-closed", ()=>{ if (process.platform !== "darwin") app.quit(); });
'@
            $main | Out-File -FilePath ./game/main.js -Encoding utf8 -Force

            # index.html
            $html = @'
<!doctype html>
<html lang="cs">
<head><meta charset="utf-8"><title>Labubu — Demo</title></head>
<body style="font-family:Segoe UI,Arial;background:#88c2ff;color:#022;display:flex;align-items:center;justify-content:center;height:100vh;">
  <div style="text-align:center">
    <h1>Labubu — Demo (autogenerated)</h1>
    <p>Tato minimální verze byla vytvořena automaticky pro build.</p>
  </div>
</body>
</html>
'@
            $html | Out-File -FilePath ./game/index.html -Encoding utf8 -Force

            # build resources folder (icon placeholder)
            if (-not (Test-Path -Path ./game/build)) { New-Item -ItemType Directory -Path ./game/build | Out-Null }
            # Write an empty placeholder file for icon (electron-builder won't fail on missing icon, but keep placeholder)
            [System.IO.File]::WriteAllBytes((Resolve-Path ./game/build/icon.ico).Path, [byte[]]@(0))
            Write-Host "Minimal project created."
          } else {
            Write-Host "package.json exists — using provided project."
          }

      - name: Install dependencies (if package.json exists)
        shell: pwsh
        run: |
          if (Test-Path -Path ./game/package.json) {
            Push-Location ./game
            Write-Host "Running npm install ..."
            npm install --no-audit --no-fund
            if ($LASTEXITCODE -ne 0) { Write-Error "npm install failed"; exit 1 }
            Pop-Location
          } else {
            Write-Error "package.json still missing after ensure step."
            exit 1
          }

      - name: Build (electron-builder)
        shell: pwsh
        run: |
          Push-Location ./game
          Write-Host "Running npm run dist ..."
          npm run dist
          if ($LASTEXITCODE -ne 0) {
            Write-Error "npm run dist failed. See logs above."
            exit 1
          }
          Pop-Location

      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: labubu-installer
          path: ./game/dist/*.exe
