name: Build Labubu from ZIP and produce installer
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find and extract ZIP (to ./game)
        shell: pwsh
        run: |
          # Try specific name first, otherwise take first .zip found
          $zip = Get-ChildItem -Path . -Filter game_files.zip -File -Recurse -ErrorAction SilentlyContinue | Select-Object -First 1
          if ($null -eq $zip) {
            $zip = Get-ChildItem -Path . -Filter *.zip -File -Recurse | Select-Object -First 1
          }
          if ($null -eq $zip) {
            Write-Error "No ZIP file found in repository root or subfolders."
            exit 1
          }
          Write-Host "Using ZIP: $($zip.FullName)"
          if (Test-Path -Path ./game) { Remove-Item -Recurse -Force ./game }
          Expand-Archive -Path $zip.FullName -DestinationPath ./game -Force

      - name: Show extracted files
        shell: pwsh
        run: dir ./game

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Ensure minimal Electron project if missing
        shell: pwsh
        run: |
          if (-not (Test-Path -Path ./game/package.json)) {
            Write-Host "No package.json found — creating minimal Electron project in ./game ..."
            New-Item -ItemType Directory -Path ./game -Force | Out-Null

            $pkg = @'
{
  "name": "labubu-openworld",
  "productName": "Labubu OpenWorld",
  "version": "1.0.0",
  "main": "main.js",
  "scripts": {
    "start": "electron .",
    "dist": "electron-builder --win --x64"
  },
  "build": {
    "appId": "cz.labubu.openworld",
    "win": {
      "target": [ "nsis" ]
    },
    "files": [ "**/*" ]
  },
  "devDependencies": {
    "electron": "^26.0.0",
    "electron-builder": "^24.6.0"
  }
}
'@
            $pkg | Out-File -FilePath ./game/package.json -Encoding utf8 -Force

            $main = @'
const { app, BrowserWindow } = require("electron");
const path = require("path");
function createWindow() {
  const win = new BrowserWindow({ width: 1000, height: 700, webPreferences: { contextIsolation: true } });
  win.loadFile(path.join(__dirname, "index.html"));
}
app.whenReady().then(createWindow);
app.on("window-all-closed", ()=>{ if (process.platform !== "darwin") app.quit(); });
'@
            $main | Out-File -FilePath ./game/main.js -Encoding utf8 -Force

            $html = @'
<!doctype html>
<html lang="cs">
<head><meta charset="utf-8"><title>Labubu — Demo</title></head>
<body style="font-family:Segoe UI,Arial;background:#88c2ff;color:#022;display:flex;align-items:center;justify-content:center;height:100vh;">
  <div style="text-align:center">
    <h1>Labubu — Demo (autogenerated)</h1>
    <p>Tato minimální verze byla vytvořena automaticky pro build.</p>
  </div>
</body>
</html>
'@
            $html | Out-File -FilePath ./game/index.html -Encoding utf8 -Force

            New-Item -ItemType Directory -Path ./game/build -Force | Out-Null
            [System.IO.File]::WriteAllBytes((Resolve-Path ./game/build/icon.ico).Path, [byte[]]@(0))
            Write-Host "Minimal project created."
          } else {
            Write-Host "package.json exists — using provided project."
          }

      - name: Install dependencies
        shell: pwsh
        run: |
          if (-not (Test-Path -Path ./game/package.json)) {
            Write-Error "package.json missing, cannot install dependencies."
            exit 1
          }
          Push-Location ./game
          npm install --no-audit --no-fund
          if ($LASTEXITCODE -ne 0) { Write-Error "npm install failed"; exit 1 }
          Pop-Location

      - name: Build (electron-builder)
        shell: pwsh
        run: |
          Push-Location ./game
          npm run dist
          if ($LASTEXITCODE -ne 0) { Write-Error "npm run dist failed"; exit 1 }
          Pop-Location

      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: labubu-installer
          path: ./game/dist/*.exe
